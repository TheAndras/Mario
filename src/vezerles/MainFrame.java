/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vezerles;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author thean
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private Vezerlo vezerlo;
    private boolean keyReleased;

    public MainFrame() {
        initComponents();
        beallitas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jatekPanel1 = new feluletek.JatekPanel();
        kijelzoPanel1 = new feluletek.KijelzoPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuSugo = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 621));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jatekPanel1Layout = new javax.swing.GroupLayout(jatekPanel1);
        jatekPanel1.setLayout(jatekPanel1Layout);
        jatekPanel1Layout.setHorizontalGroup(
            jatekPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        jatekPanel1Layout.setVerticalGroup(
            jatekPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 579, Short.MAX_VALUE)
        );

        getContentPane().add(jatekPanel1, java.awt.BorderLayout.CENTER);
        getContentPane().add(kijelzoPanel1, java.awt.BorderLayout.PAGE_START);

        menuSugo.setText("Súgó");
        menuSugo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuSugoMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuSugo);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    Billentyűzet gombnyomás figyelő.
    W, A, D billentyű lenyomására a vezérlőn keresztül mozgatjuk Máriót.
    ESCAPE gombnyomás hatására feladhatjuk a játékot (Csapdába kerülés esetén) majd egy elétvesztés után elölről kezdhetjük.
    */
    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (vezerlo != null) {
            if (keyReleased) {
                kijelzoPanel1.panelValtas();
            }
            if (evt.getKeyCode() == KeyEvent.VK_W || evt.getKeyCode() == KeyEvent.VK_UP) {
                vezerlo.ugras(true);
                keyReleased=false;
            }

            if (evt.getKeyCode() == KeyEvent.VK_A || evt.getKeyCode() == KeyEvent.VK_LEFT) {
                vezerlo.balraMegy(true);
                keyReleased=false;
            }
            if (evt.getKeyCode() == KeyEvent.VK_D || evt.getKeyCode() == KeyEvent.VK_RIGHT) {
                vezerlo.jobbraMegy(true);
                keyReleased=false;
            }
            
            if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
                vezerlo.eletVesztes();
            }

        }

    }//GEN-LAST:event_formKeyPressed

    /**
    Billentyű felengedést figyelő. Hatására megszakad Márió mozgása
    */
    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased

        if (vezerlo != null) {
            if (evt.getKeyCode() == KeyEvent.VK_W || evt.getKeyCode() == KeyEvent.VK_UP) {
                vezerlo.ugras(false);
                keyReleased=true;
            }
            if (evt.getKeyCode() == KeyEvent.VK_A || evt.getKeyCode() == KeyEvent.VK_LEFT) {
                vezerlo.balraMegy(false);
                keyReleased=true;
            }
            if (evt.getKeyCode() == KeyEvent.VK_D || evt.getKeyCode() == KeyEvent.VK_RIGHT) {
                vezerlo.jobbraMegy(false);
                keyReleased=true;
            }
        }

    }//GEN-LAST:event_formKeyReleased

    private void menuSugoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSugoMouseClicked
        JOptionPane.showMessageDialog(this, "A játékmenet leírása:"
                + "\n Egérkattintás után W, A, D, illetve nyilakkal irányíthatjuk Máriót a pályán."
                + "\n Csapdába esés esetén sem kell megriadni ESCAPE gomb megnyomásával feladhatjuk, ekkor életet vesztünk.."
                + "\n Életvesztés esetén bármelyik gombnyomás hatására ismét nekipróbálhatunk a pályának.", "Súgó", 1);
    }//GEN-LAST:event_menuSugoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private feluletek.JatekPanel jatekPanel1;
    private feluletek.KijelzoPanel kijelzoPanel1;
    private javax.swing.JMenu menuSugo;
    // End of variables declaration//GEN-END:variables

    
    /**
    Induló beállítások
    Vezérlő létrehozása, panelekhez adása. 
    */
    private void beallitas() {
        String cim = "Mario";
        this.setTitle(cim);
        int szelesseg = 800, magassag = 649;
        this.setSize(szelesseg, magassag);
        this.setLocationRelativeTo(this);
        this.setResizable(false);
        vezerlo = new Vezerlo(jatekPanel1, kijelzoPanel1);
        jatekPanel1.setVezerlo(vezerlo);
        kijelzoPanel1.setVezerlo(vezerlo);
    }
}
